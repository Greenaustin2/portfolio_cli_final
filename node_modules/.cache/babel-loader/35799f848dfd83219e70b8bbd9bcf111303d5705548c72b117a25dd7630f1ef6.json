{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/CommandLineInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/inputCss.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommandLineInterface() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValue, setOutputValue] = useState(\"\");\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleEnterKey = event => {\n    if (event.key === \"Enter\") {\n      handleCommand(inputValue);\n      setInputValue(\"\");\n    }\n  };\n  const handleCommand = command => {\n    let output = \"\";\n\n    // Here you can process the command and generate the output accordingly\n    switch (command) {\n      case \"help\":\n        output = \"Available commands: help, greet, about\";\n        break;\n      case \"about\":\n        output = \"i am a web developer\";\n        break;\n      case \"portfolio\":\n        window.open(\"https://www.sixfingerhand.xyz/\", \"_blank\");\n        output = \"opening url in a new window\";\n        break;\n      case \"greet\":\n        output = \"Hello! How are you?\";\n        break;\n      case \"clear\":\n        break;\n      default:\n        output = `Command not found: ${command}`;\n        break;\n    }\n    setOutputValue(prevOutput => prevOutput + \"> \" + command + \"\\n\" + output + \"\\n\");\n  };\n\n  // Callback function for permanent fixed focus on input\n  const onBlur = e => {\n    e.target.focus();\n  };\n  const handleValue = () => {\n    const value = \">\" + inputValue;\n    return value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: outputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: \">\",\n      onChange: handleInputChange,\n      onKeyDown: handleEnterKey,\n      autoFocus: true,\n      onBlur: onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(CommandLineInterface, \"7dm+GIYFS7MxMhIA4k/icxrYfD8=\");\n_c = CommandLineInterface;\nexport default CommandLineInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandLineInterface\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CommandLineInterface","_s","inputValue","setInputValue","outputValue","setOutputValue","handleInputChange","event","target","value","handleEnterKey","key","handleCommand","command","output","window","open","prevOutput","onBlur","e","focus","handleValue","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyDown","autoFocus","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/CommandLineInterface.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../css/inputCss.css\";\n\nfunction CommandLineInterface() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValue, setOutputValue] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleEnterKey = (event) => {\n    if (event.key === \"Enter\") {\n      handleCommand(inputValue);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleCommand = (command) => {\n    let output = \"\";\n\n    // Here you can process the command and generate the output accordingly\n    switch (command) {\n      case \"help\":\n        output = \"Available commands: help, greet, about\";\n        break;\n      case \"about\":\n        output = \"i am a web developer\";\n        break;\n      case \"portfolio\":\n        window.open(\"https://www.sixfingerhand.xyz/\", \"_blank\");\n        output = \"opening url in a new window\";\n        break;\n      case \"greet\":\n        output = \"Hello! How are you?\";\n        break;\n      case \"clear\":\n        break;\n      default:\n        output = `Command not found: ${command}`;\n        break;\n    }\n\n    setOutputValue(\n      (prevOutput) => prevOutput + \"> \" + command + \"\\n\" + output + \"\\n\"\n    );\n  };\n\n  // Callback function for permanent fixed focus on input\n  const onBlur = (e) => {\n    e.target.focus();\n  };\n\n  const handleValue = () => {\n    const value = \">\" + inputValue;\n    return value;\n  };\n\n  return (\n    <div>\n      <pre>{outputValue}</pre>\n      <input\n        type=\"text\"\n        value={\">\"}\n        onChange={handleInputChange}\n        onKeyDown={handleEnterKey}\n        autoFocus\n        onBlur={onBlur}\n      />\n    </div>\n  );\n}\n\nexport default CommandLineInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnCJ,aAAa,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,cAAc,GAAIH,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,EAAE;MACzBC,aAAa,CAACV,UAAU,CAAC;MACzBC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,aAAa,GAAIC,OAAO,IAAK;IACjC,IAAIC,MAAM,GAAG,EAAE;;IAEf;IACA,QAAQD,OAAO;MACb,KAAK,MAAM;QACTC,MAAM,GAAG,wCAAwC;QACjD;MACF,KAAK,OAAO;QACVA,MAAM,GAAG,sBAAsB;QAC/B;MACF,KAAK,WAAW;QACdC,MAAM,CAACC,IAAI,CAAC,gCAAgC,EAAE,QAAQ,CAAC;QACvDF,MAAM,GAAG,6BAA6B;QACtC;MACF,KAAK,OAAO;QACVA,MAAM,GAAG,qBAAqB;QAC9B;MACF,KAAK,OAAO;QACV;MACF;QACEA,MAAM,GAAI,sBAAqBD,OAAQ,EAAC;QACxC;IACJ;IAEAR,cAAc,CACXY,UAAU,IAAKA,UAAU,GAAG,IAAI,GAAGJ,OAAO,GAAG,IAAI,GAAGC,MAAM,GAAG,IAChE,CAAC;EACH,CAAC;;EAED;EACA,MAAMI,MAAM,GAAIC,CAAC,IAAK;IACpBA,CAAC,CAACX,MAAM,CAACY,KAAK,CAAC,CAAC;EAClB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMZ,KAAK,GAAG,GAAG,GAAGP,UAAU;IAC9B,OAAOO,KAAK;EACd,CAAC;EAED,oBACEV,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAMlB;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxB3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXlB,KAAK,EAAE,GAAI;MACXmB,QAAQ,EAAEtB,iBAAkB;MAC5BuB,SAAS,EAAEnB,cAAe;MAC1BoB,SAAS;MACTZ,MAAM,EAAEA;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CApEQD,oBAAoB;AAAA+B,EAAA,GAApB/B,oBAAoB;AAsE7B,eAAeA,oBAAoB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}