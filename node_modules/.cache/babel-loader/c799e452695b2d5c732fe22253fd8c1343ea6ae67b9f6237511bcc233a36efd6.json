{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/ProcessCommandComponent.js\";\nimport About from \"./commands/About.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst processCommand = _ref => {\n  let {\n    inputValue\n  } = _ref;\n  // You can implement your own command processing logic here\n  // For this example, we'll just return a static output based on the command\n  //hello, whoami, help, clear, break, fix, about, portfolio, contact, skills, resume,\n  if (inputValue === \"about\") {\n    return /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  } else if (inputValue === \"time\") {\n    return `Current time is: ${new Date().toLocaleTimeString()}`;\n  } else {\n    return \"Command not recognized.\";\n  }\n};\nexport default processCommand;","map":{"version":3,"names":["About","jsxDEV","_jsxDEV","processCommand","_ref","inputValue","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleTimeString"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/ProcessCommandComponent.js"],"sourcesContent":["import About from \"./commands/About.js\";\nconst processCommand = ({ inputValue }) => {\n  // You can implement your own command processing logic here\n  // For this example, we'll just return a static output based on the command\n  //hello, whoami, help, clear, break, fix, about, portfolio, contact, skills, resume,\n  if (inputValue === \"about\") {\n    return <About />;\n  } else if (inputValue === \"time\") {\n    return `Current time is: ${new Date().toLocaleTimeString()}`;\n  } else {\n    return \"Command not recognized.\";\n  }\n};\n\nexport default processCommand;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,cAAc,GAAGC,IAAA,IAAoB;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EACpC;EACA;EACA;EACA,IAAIC,UAAU,KAAK,OAAO,EAAE;IAC1B,oBAAOH,OAAA,CAACF,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClB,CAAC,MAAM,IAAIJ,UAAU,KAAK,MAAM,EAAE;IAChC,OAAQ,oBAAmB,IAAIK,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAE,EAAC;EAC9D,CAAC,MAAM;IACL,OAAO,yBAAyB;EAClC;AACF,CAAC;AAED,eAAeR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}