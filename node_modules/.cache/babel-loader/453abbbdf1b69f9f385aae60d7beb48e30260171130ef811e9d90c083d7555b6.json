{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandInterface = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [output, setOutput] = useState([]);\n  const inputRef = useRef(null);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = processCommand(inputValue);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Update output with command and response\n    setOutput([...output, {\n      command: inputValue,\n      response: commandOutput\n    }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n  const processCommand = command => {\n    // You can implement your own command processing logic here\n    // For this example, we'll just return a static output based on the command\n    if (command === \"hello\") {\n      return \"Hello, user!\";\n    } else if (command === \"time\") {\n      return `Current time is: ${new Date().toLocaleTimeString()}`;\n    } else {\n      return \"Command not recognized.\";\n    }\n  };\n  const clearScreen = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n  const onBlur = e => {\n    e.target.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-interface\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__output\",\n      children: [output.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__command\",\n          children: item.command\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-interface__input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__static-input\",\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommandSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange,\n            className: \"command-interface__input\",\n            ref: inputRef,\n            onBlur: onBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandInterface, \"V7CFk+uPJ2Xuqj6fCxhLQmSWGUg=\");\n_c = CommandInterface;\nexport default CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CommandInterface","_s","inputValue","setInputValue","history","setHistory","output","setOutput","inputRef","handleInputChange","event","target","value","handleCommandSubmit","preventDefault","commandOutput","processCommand","command","response","current","focus","Date","toLocaleTimeString","clearScreen","onBlur","e","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","ref","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst CommandInterface = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [output, setOutput] = useState([]);\n\n  const inputRef = useRef(null);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCommandSubmit = (event) => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = processCommand(inputValue);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Update output with command and response\n    setOutput([...output, { command: inputValue, response: commandOutput }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  const processCommand = (command) => {\n    // You can implement your own command processing logic here\n    // For this example, we'll just return a static output based on the command\n    if (command === \"hello\") {\n      return \"Hello, user!\";\n    } else if (command === \"time\") {\n      return `Current time is: ${new Date().toLocaleTimeString()}`;\n    } else {\n      return \"Command not recognized.\";\n    }\n  };\n\n  const clearScreen = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n\n  const onBlur = (e) => {\n    e.target.focus();\n  };\n\n  return (\n    <div className=\"command-interface\">\n      <div className=\"command-interface__output\">\n        {output.map((item, index) => (\n          <div key={index}>\n            <span className=\"command-interface__prompt\">$</span>\n            <span className=\"command-interface__command\">{item.command}</span>\n            <br />\n            <span>{item.response}</span>\n          </div>\n        ))}\n        <div className=\"command-interface__input-container\">\n          <span className=\"command-interface__prompt\">$</span>\n          <span className=\"command-interface__static-input\">{inputValue}</span>\n          <form onSubmit={handleCommandSubmit}>\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              className=\"command-interface__input\"\n              ref={inputRef}\n              onBlur={onBlur}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommandInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}