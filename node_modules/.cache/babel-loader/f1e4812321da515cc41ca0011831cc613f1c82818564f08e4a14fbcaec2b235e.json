{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\n// import processCommand from \"../util/processCommand\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport \"../css/gpt.css\";\nimport Contact from \"./commands/Contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandInterface = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [output, setOutput] = useState([]);\n  const inputRef = useRef(null);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    _s();\n    event.preventDefault();\n    const autoScroll = useRef(null);\n    const scrollToBottom = () => {\n      var _autoScroll$current;\n      (_autoScroll$current = autoScroll.current) === null || _autoScroll$current === void 0 ? void 0 : _autoScroll$current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    useEffect(() => {\n      scrollToBottom();\n    }, [output]);\n    // Process the command and retrieve the data\n    const commandOutput = /*#__PURE__*/_jsxDEV(ProcessCommandComponent, {\n      inputValue: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Update output with command and response\n    setOutput([...output, {\n      command: inputValue,\n      response: commandOutput\n    }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n  _s(handleCommandSubmit, \"gRt3lwtCAuEA64nyDrnN0gk5umY=\");\n  const clearScreen = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n  const onBlur = e => {\n    e.target.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-interface\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__output\",\n      children: [output.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__command\",\n          children: item.command\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-interface__input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommandSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"command-interface__prompt\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange,\n            className: \"command-interface__input\",\n            autoFocus: true,\n            ref: inputRef,\n            onBlur: onBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s2(CommandInterface, \"V7CFk+uPJ2Xuqj6fCxhLQmSWGUg=\");\n_c = CommandInterface;\nexport default CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProcessCommandComponent","Contact","jsxDEV","_jsxDEV","CommandInterface","_s2","_s","$RefreshSig$","inputValue","setInputValue","history","setHistory","output","setOutput","inputRef","handleInputChange","event","target","value","handleCommandSubmit","preventDefault","autoScroll","scrollToBottom","_autoScroll$current","current","scrollIntoView","behavior","commandOutput","fileName","_jsxFileName","lineNumber","columnNumber","command","response","focus","clearScreen","onBlur","e","className","children","map","item","index","onSubmit","type","onChange","autoFocus","ref","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n// import processCommand from \"../util/processCommand\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport \"../css/gpt.css\";\nimport Contact from \"./commands/Contact\";\n\nconst CommandInterface = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [output, setOutput] = useState([]);\n\n  const inputRef = useRef(null);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCommandSubmit = (event) => {\n    event.preventDefault();\n\n    const autoScroll = useRef(null);\n    const scrollToBottom = () => {\n      autoScroll.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(() => {\n      scrollToBottom();\n    }, [output]);\n    // Process the command and retrieve the data\n    const commandOutput = <ProcessCommandComponent inputValue={inputValue} />;\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Update output with command and response\n    setOutput([...output, { command: inputValue, response: commandOutput }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  const clearScreen = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n\n  const onBlur = (e) => {\n    e.target.focus();\n  };\n\n  return (\n    <div className=\"command-interface\">\n      <div className=\"command-interface__output\">\n        {output.map((item, index) => (\n          <div key={index}>\n            <span className=\"command-interface__prompt\">$</span>\n            <span className=\"command-interface__command\">{item.command}</span>\n            <br />\n            <div>{item.response}</div>\n          </div>\n        ))}\n        <div className=\"command-interface__input-container\">\n          <form onSubmit={handleCommandSubmit}>\n            <span className=\"command-interface__prompt\">$</span>\n            {/* <span className=\"command-interface__static-input\">{inputValue}</span> */}\n\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              className=\"command-interface__input\"\n              autoFocus\n              ref={inputRef}\n              onBlur={onBlur}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommandInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}