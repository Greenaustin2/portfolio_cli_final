{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandInterface = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = processCommand(inputValue);\n\n    // Update the output state with the retrieved data\n    setOutput(commandOutput);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset history index\n    setHistoryIndex(-1);\n  };\n  const processCommand = command => {\n    // You can implement your own command processing logic here\n    // For this example, we'll just return a static output based on the command\n    if (command === \"hello\") {\n      return \"Hello, user!\";\n    } else if (command === \"time\") {\n      return `Current time is: ${new Date().toLocaleTimeString()}`;\n    } else {\n      return \"Command not recognized.\";\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      navigateCommandHistory(\"up\");\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      navigateCommandHistory(\"down\");\n    }\n  };\n  const navigateCommandHistory = direction => {\n    if (direction === \"up\" && historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setInputValue(history[history.length - 1 - historyIndex - 1]);\n    } else if (direction === \"down\" && historyIndex >= 0) {\n      setHistoryIndex(historyIndex - 1);\n      if (historyIndex - 1 === -1) {\n        setInputValue(\"\");\n      } else {\n        setInputValue(history[history.length - 1 - historyIndex + 1]);\n      }\n    }\n  };\n  useEffect(() => {\n    // Listen for keydown events\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [historyIndex]);\n  const clearScreen = () => {\n    setOutput(\"\");\n    setHistory([]);\n    setHistoryIndex(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommandSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: handleInputChange,\n          className: \"command-interface__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"command-interface__submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__output\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"command-interface__output-label\",\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__history\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"command-interface__history-label\",\n        children: \"Command History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: history.slice().reverse().map((command, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: command\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearScreen,\n      className: \"command-interface__clear\",\n      children: \"Clear Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandInterface, \"rzDO11Sceim5j2LHhOmhgDy1PzA=\");\n_c = CommandInterface;\nexport default CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommandInterface","_s","inputValue","setInputValue","output","setOutput","history","setHistory","historyIndex","setHistoryIndex","handleInputChange","event","target","value","handleCommandSubmit","preventDefault","commandOutput","processCommand","command","Date","toLocaleTimeString","handleKeyDown","key","navigateCommandHistory","direction","length","document","addEventListener","removeEventListener","clearScreen","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","slice","reverse","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst CommandInterface = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCommandSubmit = (event) => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = processCommand(inputValue);\n\n    // Update the output state with the retrieved data\n    setOutput(commandOutput);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset history index\n    setHistoryIndex(-1);\n  };\n\n  const processCommand = (command) => {\n    // You can implement your own command processing logic here\n    // For this example, we'll just return a static output based on the command\n    if (command === \"hello\") {\n      return \"Hello, user!\";\n    } else if (command === \"time\") {\n      return `Current time is: ${new Date().toLocaleTimeString()}`;\n    } else {\n      return \"Command not recognized.\";\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      navigateCommandHistory(\"up\");\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      navigateCommandHistory(\"down\");\n    }\n  };\n\n  const navigateCommandHistory = (direction) => {\n    if (direction === \"up\" && historyIndex < history.length - 1) {\n      setHistoryIndex(historyIndex + 1);\n      setInputValue(history[history.length - 1 - historyIndex - 1]);\n    } else if (direction === \"down\" && historyIndex >= 0) {\n      setHistoryIndex(historyIndex - 1);\n      if (historyIndex - 1 === -1) {\n        setInputValue(\"\");\n      } else {\n        setInputValue(history[history.length - 1 - historyIndex + 1]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Listen for keydown events\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [historyIndex]);\n\n  const clearScreen = () => {\n    setOutput(\"\");\n    setHistory([]);\n    setHistoryIndex(-1);\n  };\n\n  return (\n    <div className=\"command-interface\">\n      <form onSubmit={handleCommandSubmit}>\n        <label>\n          <span className=\"command-interface__prompt\">$</span>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            className=\"command-interface__input\"\n          />\n        </label>\n        <button type=\"submit\" className=\"command-interface__submit\">\n          Submit\n        </button>\n      </form>\n      <div className=\"command-interface__output\">\n        <span className=\"command-interface__output-label\">Output:</span>\n        <div>{output}</div>\n      </div>\n      <div className=\"command-interface__history\">\n        <span className=\"command-interface__history-label\">\n          Command History:\n        </span>\n        <ul>\n          {history\n            .slice()\n            .reverse()\n            .map((command, index) => (\n              <li key={index}>{command}</li>\n            ))}\n        </ul>\n      </div>\n      <button onClick={clearScreen} className=\"command-interface__clear\">\n        Clear Screen\n      </button>\n    </div>\n  );\n};\n\nexport default CommandInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAMc,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,aAAa,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCA,KAAK,CAACI,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,aAAa,GAAGC,cAAc,CAACf,UAAU,CAAC;;IAEhD;IACAG,SAAS,CAACW,aAAa,CAAC;;IAExB;IACAT,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEJ,UAAU,CAAC,CAAC;;IAEpC;IACAC,aAAa,CAAC,EAAE,CAAC;;IAEjB;IACAM,eAAe,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMQ,cAAc,GAAIC,OAAO,IAAK;IAClC;IACA;IACA,IAAIA,OAAO,KAAK,OAAO,EAAE;MACvB,OAAO,cAAc;IACvB,CAAC,MAAM,IAAIA,OAAO,KAAK,MAAM,EAAE;MAC7B,OAAQ,oBAAmB,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAE,EAAC;IAC9D,CAAC,MAAM;MACL,OAAO,yBAAyB;IAClC;EACF,CAAC;EAED,MAAMC,aAAa,GAAIV,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACW,GAAG,KAAK,SAAS,EAAE;MAC3BX,KAAK,CAACI,cAAc,CAAC,CAAC;MACtBQ,sBAAsB,CAAC,IAAI,CAAC;IAC9B,CAAC,MAAM,IAAIZ,KAAK,CAACW,GAAG,KAAK,WAAW,EAAE;MACpCX,KAAK,CAACI,cAAc,CAAC,CAAC;MACtBQ,sBAAsB,CAAC,MAAM,CAAC;IAChC;EACF,CAAC;EAED,MAAMA,sBAAsB,GAAIC,SAAS,IAAK;IAC5C,IAAIA,SAAS,KAAK,IAAI,IAAIhB,YAAY,GAAGF,OAAO,CAACmB,MAAM,GAAG,CAAC,EAAE;MAC3DhB,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;MACjCL,aAAa,CAACG,OAAO,CAACA,OAAO,CAACmB,MAAM,GAAG,CAAC,GAAGjB,YAAY,GAAG,CAAC,CAAC,CAAC;IAC/D,CAAC,MAAM,IAAIgB,SAAS,KAAK,MAAM,IAAIhB,YAAY,IAAI,CAAC,EAAE;MACpDC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;MACjC,IAAIA,YAAY,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3BL,aAAa,CAAC,EAAE,CAAC;MACnB,CAAC,MAAM;QACLA,aAAa,CAACG,OAAO,CAACA,OAAO,CAACmB,MAAM,GAAG,CAAC,GAAGjB,YAAY,GAAG,CAAC,CAAC,CAAC;MAC/D;IACF;EACF,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd;IACA6B,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;;IAEnD;IACA,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACb,YAAY,CAAC,CAAC;EAElB,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxBxB,SAAS,CAAC,EAAE,CAAC;IACbE,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEV,OAAA;IAAK+B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChChC,OAAA;MAAMiC,QAAQ,EAAElB,mBAAoB;MAAAiB,QAAA,gBAClChC,OAAA;QAAAgC,QAAA,gBACEhC,OAAA;UAAM+B,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDrC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXxB,KAAK,EAAEX,UAAW;UAClBoC,QAAQ,EAAE5B,iBAAkB;UAC5BoB,SAAS,EAAC;QAA0B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRrC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAE5D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACPrC,OAAA;MAAK+B,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxChC,OAAA;QAAM+B,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChErC,OAAA;QAAAgC,QAAA,EAAM3B;MAAM;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACNrC,OAAA;MAAK+B,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzChC,OAAA;QAAM+B,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAEnD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPrC,OAAA;QAAAgC,QAAA,EACGzB,OAAO,CACLiC,KAAK,CAAC,CAAC,CACPC,OAAO,CAAC,CAAC,CACTC,GAAG,CAAC,CAACvB,OAAO,EAAEwB,KAAK,kBAClB3C,OAAA;UAAAgC,QAAA,EAAiBb;QAAO,GAAfwB,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNrC,OAAA;MAAQ4C,OAAO,EAAEd,WAAY;MAACC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAEnE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACnC,EAAA,CAvHID,gBAAgB;AAAA4C,EAAA,GAAhB5C,gBAAgB;AAyHtB,eAAeA,gBAAgB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}