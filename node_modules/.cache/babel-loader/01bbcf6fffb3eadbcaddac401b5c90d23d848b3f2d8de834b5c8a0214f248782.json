{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\n// import processCommand from \"../util/processCommand\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport \"../css/gpt.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandInterface = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [output, setOutput] = useState([]);\n  const inputRef = useRef(null);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = /*#__PURE__*/_jsxDEV(ProcessCommandComponent, {\n      inputValue: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }, this);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Update output with command and response\n    setOutput([...output, {\n      command: inputValue,\n      response: commandOutput\n    }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n  const clearScreen = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n  const onBlur = e => {\n    e.target.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-interface\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__output\",\n      children: [output.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__command\",\n          children: item.command\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-interface__input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__static-input\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCommandSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputValue,\n              onChange: handleInputChange,\n              className: \"command-interface__input\",\n              autoFocus: true,\n              ref: inputRef,\n              onBlur: onBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandInterface, \"V7CFk+uPJ2Xuqj6fCxhLQmSWGUg=\");\n_c = CommandInterface;\nexport default CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProcessCommandComponent","jsxDEV","_jsxDEV","CommandInterface","_s","inputValue","setInputValue","history","setHistory","output","setOutput","inputRef","handleInputChange","event","target","value","handleCommandSubmit","preventDefault","commandOutput","fileName","_jsxFileName","lineNumber","columnNumber","command","response","current","focus","clearScreen","onBlur","e","className","children","map","item","index","onSubmit","type","onChange","autoFocus","ref","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n// import processCommand from \"../util/processCommand\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport \"../css/gpt.css\";\n\nconst CommandInterface = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [output, setOutput] = useState([]);\n\n  const inputRef = useRef(null);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCommandSubmit = (event) => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = <ProcessCommandComponent inputValue={inputValue} />;\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Update output with command and response\n    setOutput([...output, { command: inputValue, response: commandOutput }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  const clearScreen = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n\n  const onBlur = (e) => {\n    e.target.focus();\n  };\n\n  return (\n    <div className=\"command-interface\">\n      <div className=\"command-interface__output\">\n        {output.map((item, index) => (\n          <div key={index}>\n            <span className=\"command-interface__prompt\">$</span>\n            <span className=\"command-interface__command\">{item.command}</span>\n            <br />\n            <span>{item.response}</span>\n          </div>\n        ))}\n        <div className=\"command-interface__input-container\">\n          <span className=\"command-interface__prompt\">$</span>\n          <span className=\"command-interface__static-input\">\n            <form onSubmit={handleCommandSubmit}>\n              <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                className=\"command-interface__input\"\n                autoFocus\n                ref={inputRef}\n                onBlur={onBlur}\n              />\n            </form>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommandInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D;AACA,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnCP,aAAa,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCA,KAAK,CAACI,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,aAAa,gBAAGhB,OAAA,CAACF,uBAAuB;MAACK,UAAU,EAAEA;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;;IAEzE;IACAd,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEF,UAAU,CAAC,CAAC;;IAEpC;IACAK,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAEc,OAAO,EAAElB,UAAU;MAAEmB,QAAQ,EAAEN;IAAc,CAAC,CAAC,CAAC;;IAExE;IACAZ,aAAa,CAAC,EAAE,CAAC;;IAEjB;IACAK,QAAQ,CAACc,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBnB,UAAU,CAAC,EAAE,CAAC;IACdE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMkB,MAAM,GAAIC,CAAC,IAAK;IACpBA,CAAC,CAACf,MAAM,CAACY,KAAK,CAAC,CAAC;EAClB,CAAC;EAED,oBACExB,OAAA;IAAK4B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChC7B,OAAA;MAAK4B,SAAS,EAAC,2BAA2B;MAAAC,QAAA,GACvCtB,MAAM,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBhC,OAAA;QAAA6B,QAAA,gBACE7B,OAAA;UAAM4B,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDpB,OAAA;UAAM4B,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAEE,IAAI,CAACV;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClEpB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNpB,OAAA;UAAA6B,QAAA,EAAOE,IAAI,CAACT;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAJpBY,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN,CAAC,eACFpB,OAAA;QAAK4B,SAAS,EAAC,oCAAoC;QAAAC,QAAA,gBACjD7B,OAAA;UAAM4B,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDpB,OAAA;UAAM4B,SAAS,EAAC,iCAAiC;UAAAC,QAAA,eAC/C7B,OAAA;YAAMiC,QAAQ,EAAEnB,mBAAoB;YAAAe,QAAA,eAClC7B,OAAA;cACEkC,IAAI,EAAC,MAAM;cACXrB,KAAK,EAAEV,UAAW;cAClBgC,QAAQ,EAAEzB,iBAAkB;cAC5BkB,SAAS,EAAC,0BAA0B;cACpCQ,SAAS;cACTC,GAAG,EAAE5B,QAAS;cACdiB,MAAM,EAAEA;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CArEID,gBAAgB;AAAAqC,EAAA,GAAhBrC,gBAAgB;AAuEtB,eAAeA,gBAAgB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}