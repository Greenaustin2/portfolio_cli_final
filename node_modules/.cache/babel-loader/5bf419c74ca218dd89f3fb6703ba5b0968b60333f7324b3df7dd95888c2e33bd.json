{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandInterface = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const inputRef = useRef(null);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = processCommand(inputValue);\n\n    // Update the output state with the retrieved data\n    setOutput(commandOutput);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset history index\n    setHistoryIndex(-1);\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n  const processCommand = command => {\n    // You can implement your own command processing logic here\n    // For this example, we'll just return a static output based on the command\n    if (command === \"hello\") {\n      return \"Hello, user!\";\n    } else if (command === \"time\") {\n      return `Current time is: ${new Date().toLocaleTimeString()}`;\n    } else {\n      return \"Command not recognized.\";\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      navigateCommandHistory(\"up\");\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      navigateCommandHistory(\"down\");\n    }\n  };\n  const navigateCommandHistory = direction => {\n    if (direction === \"up\") {\n      if (historyIndex < history.length - 1) {\n        setHistoryIndex(historyIndex + 1);\n        setInputValue(history[history.length - 1 - historyIndex - 1]);\n      }\n    } else if (direction === \"down\") {\n      if (historyIndex >= 0) {\n        setHistoryIndex(historyIndex - 1);\n        if (historyIndex - 1 === -1) {\n          setInputValue(\"\");\n        } else {\n          setInputValue(history[history.length - 1 - historyIndex + 1]);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    // Listen for keydown events\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [historyIndex]);\n  const clearScreen = () => {\n    setOutput(\"\");\n    setHistory([]);\n    setHistoryIndex(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommandSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: handleInputChange,\n          className: \"command-interface__input\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"command-interface__submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__output\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"command-interface__output-label\",\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__history\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"command-interface__history-label\",\n        children: \"Command History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: history.slice().reverse().map((command, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: command\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearScreen,\n      className: \"command-interface__clear\",\n      children: \"Clear Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandInterface, \"SNvEsbNpOckcM742ZNBQ0GLvMyw=\");\n_c = CommandInterface;\nexport default CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CommandInterface","_s","inputValue","setInputValue","output","setOutput","history","setHistory","historyIndex","setHistoryIndex","inputRef","handleInputChange","event","target","value","handleCommandSubmit","preventDefault","commandOutput","processCommand","current","focus","command","Date","toLocaleTimeString","handleKeyDown","key","navigateCommandHistory","direction","length","document","addEventListener","removeEventListener","clearScreen","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","ref","slice","reverse","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst CommandInterface = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n\n  const inputRef = useRef(null);\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCommandSubmit = (event) => {\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = processCommand(inputValue);\n\n    // Update the output state with the retrieved data\n    setOutput(commandOutput);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // Clear the input field\n    setInputValue(\"\");\n\n    // Reset history index\n    setHistoryIndex(-1);\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  const processCommand = (command) => {\n    // You can implement your own command processing logic here\n    // For this example, we'll just return a static output based on the command\n    if (command === \"hello\") {\n      return \"Hello, user!\";\n    } else if (command === \"time\") {\n      return `Current time is: ${new Date().toLocaleTimeString()}`;\n    } else {\n      return \"Command not recognized.\";\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      navigateCommandHistory(\"up\");\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      navigateCommandHistory(\"down\");\n    }\n  };\n\n  const navigateCommandHistory = (direction) => {\n    if (direction === \"up\") {\n      if (historyIndex < history.length - 1) {\n        setHistoryIndex(historyIndex + 1);\n        setInputValue(history[history.length - 1 - historyIndex - 1]);\n      }\n    } else if (direction === \"down\") {\n      if (historyIndex >= 0) {\n        setHistoryIndex(historyIndex - 1);\n        if (historyIndex - 1 === -1) {\n          setInputValue(\"\");\n        } else {\n          setInputValue(history[history.length - 1 - historyIndex + 1]);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Listen for keydown events\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [historyIndex]);\n\n  const clearScreen = () => {\n    setOutput(\"\");\n    setHistory([]);\n    setHistoryIndex(-1);\n  };\n\n  return (\n    <div className=\"command-interface\">\n      <form onSubmit={handleCommandSubmit}>\n        <label>\n          <span className=\"command-interface__prompt\">$</span>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            className=\"command-interface__input\"\n            ref={inputRef}\n          />\n        </label>\n        <button type=\"submit\" className=\"command-interface__submit\">\n          Submit\n        </button>\n      </form>\n      <div className=\"command-interface__output\">\n        <span className=\"command-interface__output-label\">Output:</span>\n        <div>{output}</div>\n      </div>\n      {history.length > 0 && (\n        <div className=\"command-interface__history\">\n          <span className=\"command-interface__history-label\">\n            Command History:\n          </span>\n          <ul>\n            {history\n              .slice()\n              .reverse()\n              .map((command, index) => (\n                <li key={index}>{command}</li>\n              ))}\n          </ul>\n        </div>\n      )}\n      <button onClick={clearScreen} className=\"command-interface__clear\">\n        Clear Screen\n      </button>\n    </div>\n  );\n};\n\nexport default CommandInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}