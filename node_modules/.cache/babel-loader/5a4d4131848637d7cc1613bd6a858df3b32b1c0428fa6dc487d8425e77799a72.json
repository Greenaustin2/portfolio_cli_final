{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport useKeyDown from \"../hooks/useKeyDown\";\nimport \"../css/gpt.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandInterface = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const [output, setOutput] = useState([]);\n  const inputRef = useRef(null);\n  const autoScroll = useRef(null);\n  var index = history.length;\n  const historyUp = () => {\n    setInputValue(history[historyIndex]);\n    setHistoryIndex(historyIndex - 1);\n  };\n  const historyDown = () => {\n    setInputValue(history[historyIndex]);\n    setHistoryIndex(historyIndex - 1);\n  };\n  useKeyDown(\"ArrowUp\", historyUp, inputValue);\n  useKeyDown(\"ArrowDown\", historyDown, inputValue);\n\n  //Ensures commands and responses are in view via auto-scroll to bottom of content\n  const scrollToBottom = () => {\n    var _autoScroll$current;\n    (_autoScroll$current = autoScroll.current) === null || _autoScroll$current === void 0 ? void 0 : _autoScroll$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [output]);\n\n  //Clears the terminal\n  const clear = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n\n  //Opens email prompt in new tab\n  const contact = () => {\n    window.open(\"mailto:greenaustin2@gmail.com\");\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    console.log(history);\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = /*#__PURE__*/_jsxDEV(ProcessCommandComponent, {\n      inputValue: inputValue,\n      clear: clear,\n      contact: contact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n    setHistoryIndex(index);\n\n    // Update output with command and response\n    setOutput([...output, {\n      command: inputValue,\n      response: commandOutput\n    }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n    console.log(history);\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  //Permanent focus on text input\n  const onBlur = e => {\n    e.target.focus();\n  };\n  // const onMouseDown = (event) => {\n  //   event.preventDefault();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [history, historyIndex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__output\",\n      children: [output.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__command\",\n          children: item.command\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-interface__input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommandSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"command-interface__prompt\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange,\n            className: \"command-interface__input\",\n            autoFocus: true,\n            ref: inputRef,\n            onBlur: onBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: autoScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandInterface, \"d22JzaXE6Cy4bLy6EZxL6qmnudg=\", false, function () {\n  return [useKeyDown, useKeyDown];\n});\n_c = CommandInterface;\nexport default CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProcessCommandComponent","useKeyDown","jsxDEV","_jsxDEV","CommandInterface","_s","inputValue","setInputValue","history","setHistory","historyIndex","setHistoryIndex","output","setOutput","inputRef","autoScroll","index","length","historyUp","historyDown","scrollToBottom","_autoScroll$current","current","scrollIntoView","behavior","clear","contact","window","open","handleInputChange","event","target","value","handleCommandSubmit","console","log","preventDefault","commandOutput","fileName","_jsxFileName","lineNumber","columnNumber","command","response","focus","onBlur","e","className","children","map","item","onSubmit","type","onChange","autoFocus","ref","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport useKeyDown from \"../hooks/useKeyDown\";\nimport \"../css/gpt.css\";\n\nconst CommandInterface = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const [output, setOutput] = useState([]);\n\n  const inputRef = useRef(null);\n  const autoScroll = useRef(null);\n\n  var index = history.length;\n\n  const historyUp = () => {\n    setInputValue(history[historyIndex]);\n    setHistoryIndex(historyIndex - 1);\n  };\n\n  const historyDown = () => {\n    setInputValue(history[historyIndex]);\n    setHistoryIndex(historyIndex - 1);\n  };\n\n  useKeyDown(\"ArrowUp\", historyUp, inputValue);\n  useKeyDown(\"ArrowDown\", historyDown, inputValue);\n\n  //Ensures commands and responses are in view via auto-scroll to bottom of content\n  const scrollToBottom = () => {\n    autoScroll.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [output]);\n\n  //Clears the terminal\n  const clear = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n\n  //Opens email prompt in new tab\n  const contact = () => {\n    window.open(\"mailto:greenaustin2@gmail.com\");\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCommandSubmit = (event) => {\n    console.log(history);\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = (\n      <ProcessCommandComponent\n        inputValue={inputValue}\n        clear={clear}\n        contact={contact}\n      />\n    );\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    setHistoryIndex(index);\n\n    // Update output with command and response\n    setOutput([...output, { command: inputValue, response: commandOutput }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n    console.log(history);\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  //Permanent focus on text input\n  const onBlur = (e) => {\n    e.target.focus();\n  };\n  // const onMouseDown = (event) => {\n  //   event.preventDefault();\n  // };\n\n  return (\n    <div className=\"command-interface\">\n      <p>\n        {history}\n        {historyIndex}\n      </p>\n      <div className=\"command-interface__output\">\n        {output.map((item, index) => (\n          <div key={index}>\n            <span className=\"command-interface__prompt\">$</span>\n            <span className=\"command-interface__command\">{item.command}</span>\n            <br />\n            <div>{item.response}</div>\n          </div>\n        ))}\n        <div className=\"command-interface__input-container\">\n          <form onSubmit={handleCommandSubmit}>\n            <span className=\"command-interface__prompt\">$</span>\n            {/* <span className=\"command-interface__static-input\">{inputValue}</span> */}\n\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              className=\"command-interface__input\"\n              autoFocus\n              ref={inputRef}\n              onBlur={onBlur}\n            />\n          </form>\n        </div>\n      </div>\n      <div ref={autoScroll}></div>\n    </div>\n  );\n};\n\nexport default CommandInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}