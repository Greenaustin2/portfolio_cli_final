{"ast":null,"code":"var _jsxFileName = \"/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport useKeyDown from \"../hooks/useKeyDown\";\nimport \"../css/gpt.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandInterface = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  // const [historyIndex, setHistoryIndex] = useState(0);\n  const [output, setOutput] = useState([]);\n  const inputRef = useRef(null);\n  const autoScroll = useRef(null);\n  let index;\n  const historyUp = () => {\n    setInputValue(history[index]);\n    index -= 1;\n  };\n\n  // const historyDown = () => {\n  //   setInputValue(history[historyIndex]);\n  //   setHistoryIndex(historyIndex + 1);\n  // };\n\n  useKeyDown(\"ArrowUp\", historyUp, inputValue);\n  // useKeyDown(\"ArrowDown\", historyDown, inputValue);\n\n  //Ensures commands and responses are in view via auto-scroll to bottom of content\n  const scrollToBottom = () => {\n    var _autoScroll$current;\n    (_autoScroll$current = autoScroll.current) === null || _autoScroll$current === void 0 ? void 0 : _autoScroll$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [output]);\n\n  //Clears the terminal\n  const clear = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n\n  //Opens email prompt in new tab\n  const contact = () => {\n    window.open(\"mailto:greenaustin2@gmail.com\");\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    console.log(history);\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = /*#__PURE__*/_jsxDEV(ProcessCommandComponent, {\n      inputValue: inputValue,\n      clear: clear,\n      contact: contact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // setHistoryIndex(index);\n    index = history.length;\n\n    // Update output with command and response\n    setOutput([...output, {\n      command: inputValue,\n      response: commandOutput\n    }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n    console.log(history);\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  //Permanent focus on text input\n  const onBlur = e => {\n    e.target.focus();\n  };\n  // const onMouseDown = (event) => {\n  //   event.preventDefault();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"command-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [history, historyIndex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command-interface__output\",\n      children: [output.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__prompt\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"command-interface__command\",\n          children: item.command\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"command-interface__input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommandSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"command-interface__prompt\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange,\n            className: \"command-interface__input\",\n            autoFocus: true,\n            ref: inputRef,\n            onBlur: onBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: autoScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandInterface, \"ldIwaZVH3ndVwi+uABPdx9FzMcY=\", false, function () {\n  return [useKeyDown];\n});\n_c = CommandInterface;\nexport default CommandInterface;\nvar _c;\n$RefreshReg$(_c, \"CommandInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProcessCommandComponent","useKeyDown","jsxDEV","_jsxDEV","CommandInterface","_s","inputValue","setInputValue","history","setHistory","output","setOutput","inputRef","autoScroll","index","historyUp","scrollToBottom","_autoScroll$current","current","scrollIntoView","behavior","clear","contact","window","open","handleInputChange","event","target","value","handleCommandSubmit","console","log","preventDefault","commandOutput","fileName","_jsxFileName","lineNumber","columnNumber","length","command","response","focus","onBlur","e","className","children","historyIndex","map","item","onSubmit","type","onChange","autoFocus","ref","_c","$RefreshReg$"],"sources":["/Users/austingreen/Documents/vscode/portfolio/client/src/components/Gpt.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ProcessCommandComponent from \"./ProcessCommandComponent\";\nimport useKeyDown from \"../hooks/useKeyDown\";\nimport \"../css/gpt.css\";\n\nconst CommandInterface = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  // const [historyIndex, setHistoryIndex] = useState(0);\n  const [output, setOutput] = useState([]);\n\n  const inputRef = useRef(null);\n  const autoScroll = useRef(null);\n\n  let index;\n\n  const historyUp = () => {\n    setInputValue(history[index]);\n    index -= 1;\n  };\n\n  // const historyDown = () => {\n  //   setInputValue(history[historyIndex]);\n  //   setHistoryIndex(historyIndex + 1);\n  // };\n\n  useKeyDown(\"ArrowUp\", historyUp, inputValue);\n  // useKeyDown(\"ArrowDown\", historyDown, inputValue);\n\n  //Ensures commands and responses are in view via auto-scroll to bottom of content\n  const scrollToBottom = () => {\n    autoScroll.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [output]);\n\n  //Clears the terminal\n  const clear = () => {\n    setHistory([]);\n    setOutput([]);\n  };\n\n  //Opens email prompt in new tab\n  const contact = () => {\n    window.open(\"mailto:greenaustin2@gmail.com\");\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleCommandSubmit = (event) => {\n    console.log(history);\n    event.preventDefault();\n\n    // Process the command and retrieve the data\n    const commandOutput = (\n      <ProcessCommandComponent\n        inputValue={inputValue}\n        clear={clear}\n        contact={contact}\n      />\n    );\n\n    // Update command history\n    setHistory([...history, inputValue]);\n\n    // setHistoryIndex(index);\n    index = history.length;\n\n    // Update output with command and response\n    setOutput([...output, { command: inputValue, response: commandOutput }]);\n\n    // Clear the input field\n    setInputValue(\"\");\n    console.log(history);\n\n    // Reset input focus\n    inputRef.current.focus();\n  };\n\n  //Permanent focus on text input\n  const onBlur = (e) => {\n    e.target.focus();\n  };\n  // const onMouseDown = (event) => {\n  //   event.preventDefault();\n  // };\n\n  return (\n    <div className=\"command-interface\">\n      <p>\n        {history}\n        {historyIndex}\n      </p>\n      <div className=\"command-interface__output\">\n        {output.map((item, index) => (\n          <div key={index}>\n            <span className=\"command-interface__prompt\">$</span>\n            <span className=\"command-interface__command\">{item.command}</span>\n            <br />\n            <div>{item.response}</div>\n          </div>\n        ))}\n        <div className=\"command-interface__input-container\">\n          <form onSubmit={handleCommandSubmit}>\n            <span className=\"command-interface__prompt\">$</span>\n            {/* <span className=\"command-interface__static-input\">{inputValue}</span> */}\n\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              className=\"command-interface__input\"\n              autoFocus\n              ref={inputRef}\n              onBlur={onBlur}\n            />\n          </form>\n        </div>\n      </div>\n      <div ref={autoScroll}></div>\n    </div>\n  );\n};\n\nexport default CommandInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}